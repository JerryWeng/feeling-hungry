{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\n\n// import { getRestaurantsData } from '../../api/getRestaurants.js'\nimport styles from \"./map.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const [places, setPlaces] = useState();\n  const [coordinates, setCoordinates] = useState();\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(async function onLoad(mapInstance) {\n    const geocoder = new window.google.maps.Geocoder();\n    const service = new window.google.maps.places.PlacesService(mapInstance);\n    let currentLocation;\n    let coordinate;\n    const getPositionCallback = _ref => {\n      let {\n        coords: {\n          latitude,\n          longitude\n        }\n      } = _ref;\n      coordinate = {\n        lat: latitude,\n        lng: longitude\n      };\n      setCoordinates(coordinate);\n    };\n    const positionPromise = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(successResponse => {\n          resolve(successResponse);\n        }, errorResponse => {\n          reject(errorResponse);\n        });\n      });\n    };\n    const result = await positionPromise();\n    navigator.geolocation.getCurrentPosition(getPositionCallback);\n    console.log(result);\n    geocoder.geocode({\n      'location': coordinate\n    }, function (results, status) {\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        if (results[1]) {\n          currentLocation = results[1].place_id;\n        } else {\n          console.log('No results found');\n        }\n      } else {\n        console.log('Geocoder failed due to: ' + status);\n      }\n    });\n    service.getDetails({\n      placeId: currentLocation\n    }, function (place, status) {\n      console.log('Place details:', place);\n    });\n  });\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n\n  // useEffect(() => {\n  //   // getRestaurantsData()\n  //   //   .then((data) => {\n  //   //     setPlaces(data);\n  //   //   })\n  //   const map = window.google.maps.Map(document.getElementById('map'))\n  //   const service = window.google.maps.places.PlacesService(map)\n  //   service.getDetails({\n  //     placeId: 'ChIJN1t_tDeuEmsRUsoyG83frY4'\n  //   }, function (place, status) {\n  //     console.log('Place details:', place);\n  //   });\n  // })\n\n  const RenderMap = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"search\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"map-container\"],\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: 'map',\n          zoom: 10,\n          center: coordinates,\n          mapContainerClassName: mapStyles,\n          options: options,\n          onLoad: onLoad,\n          children: /*#__PURE__*/_jsxDEV(MarkerF, {\n            position: coordinates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? RenderMap() : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 35\n  }, this);\n}\n_s(Map, \"Vqi3rLUNNuHrRLvooS7lufKRKww=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","useJsApiLoader","MarkerF","React","useState","useMemo","useCallback","useRef","useEffect","styles","jsxDEV","_jsxDEV","Map","_s","places","setPlaces","coordinates","setCoordinates","mapStyles","options","disableDefaultUI","clickableIcons","onLoad","mapInstance","geocoder","window","google","maps","Geocoder","service","PlacesService","currentLocation","coordinate","getPositionCallback","_ref","coords","latitude","longitude","lat","lng","positionPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","successResponse","errorResponse","result","console","log","geocode","results","status","GeocoderStatus","OK","place_id","getDetails","placeId","place","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","RenderMap","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","zoom","center","mapContainerClassName","position","_c","$RefreshReg$"],"sources":["/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\n\n// import { getRestaurantsData } from '../../api/getRestaurants.js'\nimport styles from \"./map.module.css\";\n\nexport default function Map() {\n  const [places, setPlaces] = useState();\n  const [coordinates, setCoordinates] = useState();\n\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false,\n  }), []);\n\n\n  const onLoad = useCallback( async function onLoad (mapInstance){\n    const geocoder = new window.google.maps.Geocoder\n    const service = new window.google.maps.places.PlacesService(mapInstance)\n\n    let currentLocation;\n    let coordinate; \n\n    const getPositionCallback = ({coords: {latitude, longitude}}) => {\n      coordinate = { lat: latitude, lng: longitude };\n      setCoordinates(coordinate);\n    }\n\n    const positionPromise = () => {\n      return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition((successResponse) => {\n              resolve(successResponse);\n          }, (errorResponse) => {\n              reject(errorResponse);\n          });\n      });\n  }\n\n    const result = await positionPromise();\n    \n    navigator.geolocation.getCurrentPosition(getPositionCallback);\n    console.log(result)\n    \n    geocoder.geocode({'location': coordinate}, function(results, status){\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        if (results[1]) {\n          currentLocation = results[1].place_id\n        } else {\n          console.log('No results found')\n        }\n      } else {\n        console.log('Geocoder failed due to: ' + status)\n      }\n    })\n\n    service.getDetails({\n      placeId: currentLocation\n    }, function (place, status) {\n      console.log('Place details:', place);\n    });\n  });\n\n  const {isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  })\n\n\n  // useEffect(() => {\n  //   // getRestaurantsData()\n  //   //   .then((data) => {\n  //   //     setPlaces(data);\n  //   //   })\n  //   const map = window.google.maps.Map(document.getElementById('map'))\n  //   const service = window.google.maps.places.PlacesService(map)\n  //   service.getDetails({\n  //     placeId: 'ChIJN1t_tDeuEmsRUsoyG83frY4'\n  //   }, function (place, status) {\n  //     console.log('Place details:', place);\n  //   });\n  // })\n  \n  const RenderMap = () => {\n    return (\n      <div>\n        <div className={styles[\"search\"]}>\n        </div>\n        <div className={styles[\"map-container\"]}>\n          <GoogleMap\n            id={'map'}\n            zoom={10}\n            center={coordinates}\n            mapContainerClassName={mapStyles}\n            options={options}\n            onLoad={onLoad}\n          >\n            <MarkerF position={coordinates}></MarkerF>\n          </GoogleMap>\n        </div>\n      </div>\n    );\n  }\n  if (loadError) {\n    return <div>Map cannot be loaded.</div>\n  }\n  return isLoaded ? RenderMap() : <div></div>\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,cAAc,EAAEC,OAAO,QAAQ,wBAAwB;AAC3E,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAEhF;AACA,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAEhD,MAAMc,SAAS,GAAGT,MAAM,CAAC,eAAe,CAAC;EACzC,MAAMU,OAAO,GAAGd,OAAO,CAAC,OAAO;IAC7Be,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE;EAClB,CAAC,CAAC,EAAE,EAAE,CAAC;EAGP,MAAMC,MAAM,GAAGhB,WAAW,CAAE,eAAegB,MAAMA,CAAEC,WAAW,EAAC;IAC7D,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,QAAQ,CAAD,CAAC;IAChD,MAAMC,OAAO,GAAG,IAAIJ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACb,MAAM,CAACgB,aAAa,CAACP,WAAW,CAAC;IAExE,IAAIQ,eAAe;IACnB,IAAIC,UAAU;IAEd,MAAMC,mBAAmB,GAAGC,IAAA,IAAqC;MAAA,IAApC;QAACC,MAAM,EAAE;UAACC,QAAQ;UAAEC;QAAS;MAAC,CAAC,GAAAH,IAAA;MAC1DF,UAAU,GAAG;QAAEM,GAAG,EAAEF,QAAQ;QAAEG,GAAG,EAAEF;MAAU,CAAC;MAC9CpB,cAAc,CAACe,UAAU,CAAC;IAC5B,CAAC;IAED,MAAMQ,eAAe,GAAGA,CAAA,KAAM;MAC5B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,eAAe,IAAK;UAC1DL,OAAO,CAACK,eAAe,CAAC;QAC5B,CAAC,EAAGC,aAAa,IAAK;UAClBL,MAAM,CAACK,aAAa,CAAC;QACzB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IAEC,MAAMC,MAAM,GAAG,MAAMT,eAAe,CAAC,CAAC;IAEtCI,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACb,mBAAmB,CAAC;IAC7DiB,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IAEnBzB,QAAQ,CAAC4B,OAAO,CAAC;MAAC,UAAU,EAAEpB;IAAU,CAAC,EAAE,UAASqB,OAAO,EAAEC,MAAM,EAAC;MAClE,IAAIA,MAAM,KAAK7B,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC4B,cAAc,CAACC,EAAE,EAAE;QACnD,IAAIH,OAAO,CAAC,CAAC,CAAC,EAAE;UACdtB,eAAe,GAAGsB,OAAO,CAAC,CAAC,CAAC,CAACI,QAAQ;QACvC,CAAC,MAAM;UACLP,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QACjC;MACF,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,0BAA0B,GAAGG,MAAM,CAAC;MAClD;IACF,CAAC,CAAC;IAEFzB,OAAO,CAAC6B,UAAU,CAAC;MACjBC,OAAO,EAAE5B;IACX,CAAC,EAAE,UAAU6B,KAAK,EAAEN,MAAM,EAAE;MAC1BJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAES,KAAK,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,MAAM;IAACC,QAAQ;IAAEC;EAAU,CAAC,GAAG7D,cAAc,CAAC;IAC5C8D,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC;EAChC,CAAC,CAAC;;EAGF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,oBACExD,OAAA;MAAAyD,QAAA,gBACEzD,OAAA;QAAK0D,SAAS,EAAE5D,MAAM,CAAC,QAAQ;MAAE;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACN9D,OAAA;QAAK0D,SAAS,EAAE5D,MAAM,CAAC,eAAe,CAAE;QAAA2D,QAAA,eACtCzD,OAAA,CAACX,SAAS;UACR0E,EAAE,EAAE,KAAM;UACVC,IAAI,EAAE,EAAG;UACTC,MAAM,EAAE5D,WAAY;UACpB6D,qBAAqB,EAAE3D,SAAU;UACjCC,OAAO,EAAEA,OAAQ;UACjBG,MAAM,EAAEA,MAAO;UAAA8C,QAAA,eAEfzD,OAAA,CAACT,OAAO;YAAC4E,QAAQ,EAAE9D;UAAY;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EACD,IAAIX,SAAS,EAAE;IACb,oBAAOnD,OAAA;MAAAyD,QAAA,EAAK;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EACA,OAAOZ,QAAQ,GAAGM,SAAS,CAAC,CAAC,gBAAGxD,OAAA;IAAA2D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAC7C;AAAC5D,EAAA,CApGuBD,GAAG;EAAA,QAyDMX,cAAc;AAAA;AAAA8E,EAAA,GAzDvBnE,GAAG;AAAA,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}