{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\nimport styles from \"./map.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [places, setPlaces] = useState();\n  const [coordinates, setCoordinates] = useState();\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(async function onLoad(mapInstance) {\n    setMap(mapInstance);\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(successResponse => {\n          resolve(successResponse);\n        }, errorResponse => {\n          reject(errorResponse);\n        });\n      });\n    };\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\n      \"lat\": result['coords']['latitude'],\n      \"lng\": result['coords']['longitude']\n    };\n    setCoordinates(coordinate);\n    mapInstance.setCenter(coordinate);\n    mapInstance.setZoom(13);\n    console.log(coordinate);\n  });\n  const findPlaces = () => {\n    const geocoder = new window.google.maps.Geocoder();\n    const service = new window.google.maps.places.PlacesService(map);\n    geocoder.geocode({\n      'location': coordinates\n    }, function (results, status) {\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        if (results[0]) {\n          service.nearbySearch({\n            location: results[0].geometry.location,\n            radius: 2000,\n            type: ['restaurant']\n          }, function (place, status) {\n            console.log('Place details:', place);\n            setPlaces(place);\n          });\n        } else {\n          console.log('No results found');\n        }\n      } else {\n        console.log('Geocoder failed due to: ' + status);\n      }\n    });\n  };\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const RenderMap = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"search\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"map-container\"],\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: 'map',\n          zoom: 10,\n          mapContainerClassName: mapStyles,\n          options: options,\n          onLoad: onLoad,\n          children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n            position: coordinates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), map && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: findPlaces,\n            children: \"Find Restaurants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? RenderMap() : null;\n}\n_s(Map, \"kjoKQjLEZ2Z1gPSdZepcRjkq0Iw=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","useJsApiLoader","MarkerF","React","useState","useMemo","useCallback","useRef","useEffect","styles","jsxDEV","_jsxDEV","Map","_s","map","setMap","places","setPlaces","coordinates","setCoordinates","mapStyles","options","disableDefaultUI","clickableIcons","onLoad","mapInstance","getCurrentPositionPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","successResponse","errorResponse","result","coordinate","setCenter","setZoom","console","log","findPlaces","geocoder","window","google","maps","Geocoder","service","PlacesService","geocode","results","status","GeocoderStatus","OK","nearbySearch","location","geometry","radius","type","place","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","RenderMap","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","zoom","mapContainerClassName","position","onClick","_c","$RefreshReg$"],"sources":["/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\n\nimport styles from \"./map.module.css\";\n\nexport default function Map() {\n  const [map, setMap] = useState(null);\n  const [places, setPlaces] = useState();\n  const [coordinates, setCoordinates] = useState();\n\n  const mapStyles = styles[\"map-container\"]\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false,\n  }), []);\n\n  const onLoad = useCallback(async function onLoad (mapInstance){\n    setMap(mapInstance)\n\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition((successResponse) => {\n              resolve(successResponse);\n          }, (errorResponse) => {\n              reject(errorResponse);\n          });\n      });\n    }   \n\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\"lat\" : result['coords']['latitude'], \"lng\" : result['coords']['longitude']}\n    setCoordinates(coordinate)\n    mapInstance.setCenter(coordinate)\n    mapInstance.setZoom(13)\n\n    console.log(coordinate)\n  });\n\n  const findPlaces = () => {\n    const geocoder = new window.google.maps.Geocoder()\n    const service = new window.google.maps.places.PlacesService(map)\n\n    geocoder.geocode({'location': coordinates}, function(results, status){\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        if (results[0]) {\n          service.nearbySearch({\n            location: results[0].geometry.location,\n            radius: 2000,\n            type: ['restaurant']\n          }, function (place, status) {\n            console.log('Place details:', place);\n            setPlaces(place)\n          });\n        } else {\n          console.log('No results found')\n        }\n      } else {\n        console.log('Geocoder failed due to: ' + status)\n      }\n    })\n  }\n\n  const {isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  })\n\n  const RenderMap = () => {\n    return (\n      <div>\n        <div className={styles[\"search\"]}>\n        </div>\n        <div className={styles[\"map-container\"]}>\n          <GoogleMap\n            id={'map'}\n            zoom={10}\n            mapContainerClassName={mapStyles}\n            options={options}\n            onLoad={onLoad}\n          >\n            <MarkerF position={coordinates}></MarkerF>\n            {map && (\n              <button onClick={findPlaces}>\n                Find Restaurants\n              </button>\n            )}\n          </GoogleMap>\n        </div>\n      </div>\n    );\n  }\n  if (loadError) {\n    return <div>Map cannot be loaded.</div>\n  }\n  return isLoaded ? RenderMap() : null\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}