{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx\";\nimport { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\n\n// import { getRestaurantsData } from '../../api/getRestaurants.js'\nimport styles from \"./map.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  var _s = $RefreshSig$();\n  const RenderMap = () => {\n    _s();\n    const mapStyles = styles[\"map-container\"];\n    const mapRef = useRef();\n    const options = useMemo(() => ({\n      disableDefaultUI: true,\n      clickableIcons: false\n    }), []);\n    const onLoad = useCallback(map => mapRef.current = map, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"search\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"map-container\"],\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: 'map',\n          zoom: 10,\n          center: coordinates,\n          mapContainerClassName: mapStyles,\n          options: options,\n          onLoad: onLoad,\n          children: /*#__PURE__*/_jsxDEV(MarkerF, {\n            position: coordinates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  };\n  _s(RenderMap, \"E7hVeCzL8WxG0hxj/14HfZCp8SQ=\");\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? RenderMap() : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 35\n  }, this);\n}\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","useJsApiLoader","MarkerF","useState","useMemo","useCallback","useRef","useEffect","styles","jsxDEV","_jsxDEV","Map","_s","$RefreshSig$","RenderMap","mapStyles","mapRef","options","disableDefaultUI","clickableIcons","onLoad","map","current","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","zoom","center","coordinates","mapContainerClassName","position","loadError","isLoaded","_c","$RefreshReg$"],"sources":["/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\n\n// import { getRestaurantsData } from '../../api/getRestaurants.js'\nimport styles from \"./map.module.css\";\n\nexport default function Map() {\n  \n  const RenderMap = () => {\n    const mapStyles = styles[\"map-container\"];\n    const mapRef = useRef();\n    const options = useMemo(() => ({\n      disableDefaultUI: true,\n      clickableIcons: false,\n    }), []);\n    const onLoad = useCallback(map => (mapRef.current = map), []);\n\n    return (\n      <div>\n        <div className={styles[\"search\"]}>\n        </div>\n        <div className={styles[\"map-container\"]}>\n          <GoogleMap\n            id={'map'}\n            zoom={10}\n            center={coordinates}\n            mapContainerClassName={mapStyles}\n            options={options}\n            onLoad={onLoad}\n          >\n            <MarkerF position={coordinates}></MarkerF>\n          </GoogleMap>\n        </div>\n      </div>\n    );\n  }\n  if (loadError) {\n    return <div>Map cannot be loaded.</div>\n  }\n  return isLoaded ? RenderMap() : <div></div>\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,cAAc,EAAEC,OAAO,QAAQ,wBAAwB;AAC3E,SAASC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAEzE;AACA,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAE5B,MAAMC,SAAS,GAAGA,CAAA,KAAM;IAAAF,EAAA;IACtB,MAAMG,SAAS,GAAGP,MAAM,CAAC,eAAe,CAAC;IACzC,MAAMQ,MAAM,GAAGV,MAAM,CAAC,CAAC;IACvB,MAAMW,OAAO,GAAGb,OAAO,CAAC,OAAO;MAC7Bc,gBAAgB,EAAE,IAAI;MACtBC,cAAc,EAAE;IAClB,CAAC,CAAC,EAAE,EAAE,CAAC;IACP,MAAMC,MAAM,GAAGf,WAAW,CAACgB,GAAG,IAAKL,MAAM,CAACM,OAAO,GAAGD,GAAI,EAAE,EAAE,CAAC;IAE7D,oBACEX,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAKc,SAAS,EAAEhB,MAAM,CAAC,QAAQ;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACNlB,OAAA;QAAKc,SAAS,EAAEhB,MAAM,CAAC,eAAe,CAAE;QAAAe,QAAA,eACtCb,OAAA,CAACV,SAAS;UACR6B,EAAE,EAAE,KAAM;UACVC,IAAI,EAAE,EAAG;UACTC,MAAM,EAAEC,WAAY;UACpBC,qBAAqB,EAAElB,SAAU;UACjCE,OAAO,EAAEA,OAAQ;UACjBG,MAAM,EAAEA,MAAO;UAAAG,QAAA,eAEfb,OAAA,CAACR,OAAO;YAACgC,QAAQ,EAAEF;UAAY;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAAAhB,EAAA,CA3BKE,SAAS;EA4Bf,IAAIqB,SAAS,EAAE;IACb,oBAAOzB,OAAA;MAAAa,QAAA,EAAK;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EACA,OAAOQ,QAAQ,GAAGtB,SAAS,CAAC,CAAC,gBAAGJ,OAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAC7C;AAACS,EAAA,GAlCuB1B,GAAG;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}