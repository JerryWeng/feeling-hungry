{"ast":null,"code":"var _jsxFileName = \"D:\\\\School Code\\\\feeling-hungry\\\\client\\\\src\\\\components\\\\map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport RestaurantList from './RestaurantList.jsx';\nimport styles from \"./map.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [places, setPlaces] = useState();\n  const [markers, setMarkers] = useState([]);\n  const [coordinates, setCoordinates] = useState();\n  const [showMarkers, setShowMarkers] = useState(false);\n  const [showRestaurantList, setShowRestaurantList] = useState(false);\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(async function onLoad(mapInstance) {\n    setMap(mapInstance);\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(successResponse => {\n          resolve(successResponse);\n        }, errorResponse => {\n          reject(errorResponse);\n        });\n      });\n    };\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\n      lat: result[\"coords\"][\"latitude\"],\n      lng: result[\"coords\"][\"longitude\"]\n    };\n    setCoordinates(coordinate);\n    mapInstance.setCenter(coordinate);\n    mapInstance.setZoom(13);\n    console.log(coordinate);\n  });\n  async function getGeocoderResult(location) {\n    return new Promise((resolve, reject) => {\n      const geocoder = new window.google.maps.Geocoder();\n      geocoder.geocode({\n        location\n      }, (results, status) => {\n        if (status === window.google.maps.GeocoderStatus.OK) {\n          resolve(results[0]);\n        } else {\n          reject(new Error(`Geocoder failed due to: ${status}`));\n        }\n      });\n    });\n  }\n  async function searchNearbyPlaces(location, radius, type) {\n    return new Promise((resolve, reject) => {\n      const service = new window.google.maps.places.PlacesService(map);\n      service.nearbySearch({\n        location,\n        radius,\n        type\n      }, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(results);\n        } else {\n          reject(new Error(`Places search failed due to: ${status}`));\n        }\n      });\n    });\n  }\n  async function findPlaces() {\n    if (!map || !coordinates) {\n      return;\n    }\n    try {\n      const result = await getGeocoderResult(coordinates);\n      const places = await searchNearbyPlaces(result.geometry.location, 2000, [\"restaurant\"]);\n      if (showMarkers) {\n        markers.forEach(marker => {\n          marker.setMap(null);\n        });\n        setMarkers([]);\n      } else {\n        const newMarkers = places.map(place => {\n          const marker = new window.google.maps.Marker({\n            position: place.geometry.location,\n            map: map,\n            title: place.name\n          });\n          return marker;\n        });\n        setMarkers(newMarkers);\n      }\n      setPlaces(places);\n      setShowMarkers(!showMarkers);\n      setShowRestaurantList(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const RenderMap = () => {\n    const handleClick = () => {\n      setIsOpen(!isOpen);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"search\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"map-container\"],\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: 'map',\n          zoom: 10,\n          mapContainerClassName: mapStyles,\n          options: options,\n          onLoad: onLoad,\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: coordinates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), map && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles['findButton'],\n            onClick: findPlaces,\n            children: \"Find Restaurants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), showRestaurantList && /*#__PURE__*/_jsxDEV(RestaurantList, {\n            places: places,\n            isOpen: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? RenderMap() : null;\n}\n_s(Map, \"g5R4CDlcj0FB1KYqZcfxqShfsaI=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","useJsApiLoader","Marker","React","useState","useMemo","useCallback","RestaurantList","styles","jsxDEV","_jsxDEV","Map","_s","map","setMap","isOpen","setIsOpen","places","setPlaces","markers","setMarkers","coordinates","setCoordinates","showMarkers","setShowMarkers","showRestaurantList","setShowRestaurantList","mapStyles","options","disableDefaultUI","clickableIcons","onLoad","mapInstance","getCurrentPositionPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","successResponse","errorResponse","result","coordinate","lat","lng","setCenter","setZoom","console","log","getGeocoderResult","location","geocoder","window","google","maps","Geocoder","geocode","results","status","GeocoderStatus","OK","Error","searchNearbyPlaces","radius","type","service","PlacesService","nearbySearch","PlacesServiceStatus","findPlaces","geometry","forEach","marker","newMarkers","place","position","title","name","error","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","RenderMap","handleClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","zoom","mapContainerClassName","onClick","_c","$RefreshReg$"],"sources":["D:/School Code/feeling-hungry/client/src/components/map/Map.jsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\r\nimport React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport RestaurantList from './RestaurantList.jsx';\r\nimport styles from \"./map.module.css\";\r\n\r\nexport default function Map() {\r\n  const [map, setMap] = useState(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [places, setPlaces] = useState();\r\n  const [markers, setMarkers] = useState([]);\r\n  const [coordinates, setCoordinates] = useState();\r\n  const [showMarkers, setShowMarkers] = useState(false);\r\n  const [showRestaurantList, setShowRestaurantList] = useState(false);\r\n\r\n  const mapStyles = styles[\"map-container\"];\r\n  const options = useMemo(\r\n    () => ({\r\n      disableDefaultUI: true,\r\n      clickableIcons: false,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const onLoad = useCallback(async function onLoad(mapInstance) {\r\n    setMap(mapInstance);\r\n\r\n    const getCurrentPositionPromise = () => {\r\n      return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (successResponse) => {\r\n            resolve(successResponse);\r\n          },\r\n          (errorResponse) => {\r\n            reject(errorResponse);\r\n          }\r\n        );\r\n      });\r\n    };\r\n\r\n    const result = await getCurrentPositionPromise();\r\n    const coordinate = {\r\n      lat: result[\"coords\"][\"latitude\"],\r\n      lng: result[\"coords\"][\"longitude\"],\r\n    };\r\n    setCoordinates(coordinate);\r\n    mapInstance.setCenter(coordinate);\r\n    mapInstance.setZoom(13);\r\n\r\n    console.log(coordinate);\r\n  });\r\n\r\n  async function getGeocoderResult(location) {\r\n    return new Promise((resolve, reject) => {\r\n      const geocoder = new window.google.maps.Geocoder();\r\n      geocoder.geocode({ location }, (results, status) => {\r\n        if (status === window.google.maps.GeocoderStatus.OK) {\r\n          resolve(results[0]);\r\n        } else {\r\n          reject(new Error(`Geocoder failed due to: ${status}`));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async function searchNearbyPlaces(location, radius, type) {\r\n    return new Promise((resolve, reject) => {\r\n      const service = new window.google.maps.places.PlacesService(map);\r\n      service.nearbySearch({ location, radius, type }, (results, status) => {\r\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n          resolve(results);\r\n        } else {\r\n          reject(new Error(`Places search failed due to: ${status}`));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async function findPlaces() {\r\n    if (!map || !coordinates) {\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const result = await getGeocoderResult(coordinates);\r\n      const places = await searchNearbyPlaces(\r\n        result.geometry.location,\r\n        2000,\r\n        [\"restaurant\"]\r\n      );\r\n  \r\n      if (showMarkers) {\r\n        markers.forEach((marker) => {\r\n          marker.setMap(null);\r\n        });\r\n        setMarkers([]);\r\n      } else {\r\n        const newMarkers = places.map((place) => {\r\n          const marker = new window.google.maps.Marker({\r\n            position: place.geometry.location,\r\n            map: map,\r\n            title: place.name,\r\n          });\r\n          return marker;\r\n        });\r\n        setMarkers(newMarkers);\r\n      }\r\n  \r\n      setPlaces(places);\r\n      setShowMarkers(!showMarkers);\r\n      setShowRestaurantList(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const {isLoaded, loadError } = useJsApiLoader({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  })\r\n\r\n  const RenderMap = () => {\r\n    const handleClick = () => {\r\n      setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className={styles[\"search\"]}>\r\n        </div>\r\n        <div className={styles[\"map-container\"]}>\r\n          <GoogleMap\r\n            id={'map'}\r\n            zoom={10}\r\n            mapContainerClassName={mapStyles}\r\n            options={options}\r\n            onLoad={onLoad}\r\n          >\r\n            <Marker position={coordinates}></Marker>\r\n            {map && (\r\n              <button \r\n                className={styles['findButton']}\r\n                onClick={findPlaces} \r\n              >\r\n                Find Restaurants\r\n              </button>\r\n            )}\r\n            {showRestaurantList && <RestaurantList places={places} isOpen={handleClick} />}\r\n          </GoogleMap>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (loadError) {\r\n    return <div>Map cannot be loaded.</div>\r\n  }\r\n  return isLoaded ? RenderMap() : null\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,cAAc,EAAEC,MAAM,QAAQ,wBAAwB;AAC1E,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAE7D,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMuB,SAAS,GAAGnB,MAAM,CAAC,eAAe,CAAC;EACzC,MAAMoB,OAAO,GAAGvB,OAAO,CACrB,OAAO;IACLwB,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE;EAClB,CAAC,CAAC,EACF,EACF,CAAC;EAED,MAAMC,MAAM,GAAGzB,WAAW,CAAC,eAAeyB,MAAMA,CAACC,WAAW,EAAE;IAC5DlB,MAAM,CAACkB,WAAW,CAAC;IAEnB,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;MACtC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,eAAe,IAAK;UACnBL,OAAO,CAACK,eAAe,CAAC;QAC1B,CAAC,EACAC,aAAa,IAAK;UACjBL,MAAM,CAACK,aAAa,CAAC;QACvB,CACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,MAAM,GAAG,MAAMT,yBAAyB,CAAC,CAAC;IAChD,MAAMU,UAAU,GAAG;MACjBC,GAAG,EAAEF,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC;MACjCG,GAAG,EAAEH,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW;IACnC,CAAC;IACDpB,cAAc,CAACqB,UAAU,CAAC;IAC1BX,WAAW,CAACc,SAAS,CAACH,UAAU,CAAC;IACjCX,WAAW,CAACe,OAAO,CAAC,EAAE,CAAC;IAEvBC,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;EACzB,CAAC,CAAC;EAEF,eAAeO,iBAAiBA,CAACC,QAAQ,EAAE;IACzC,OAAO,IAAIjB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMgB,QAAQ,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC;MAClDJ,QAAQ,CAACK,OAAO,CAAC;QAAEN;MAAS,CAAC,EAAE,CAACO,OAAO,EAAEC,MAAM,KAAK;QAClD,IAAIA,MAAM,KAAKN,MAAM,CAACC,MAAM,CAACC,IAAI,CAACK,cAAc,CAACC,EAAE,EAAE;UACnD1B,OAAO,CAACuB,OAAO,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,MAAM;UACLtB,MAAM,CAAC,IAAI0B,KAAK,CAAE,2BAA0BH,MAAO,EAAC,CAAC,CAAC;QACxD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,eAAeI,kBAAkBA,CAACZ,QAAQ,EAAEa,MAAM,EAAEC,IAAI,EAAE;IACxD,OAAO,IAAI/B,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAM8B,OAAO,GAAG,IAAIb,MAAM,CAACC,MAAM,CAACC,IAAI,CAACtC,MAAM,CAACkD,aAAa,CAACtD,GAAG,CAAC;MAChEqD,OAAO,CAACE,YAAY,CAAC;QAAEjB,QAAQ;QAAEa,MAAM;QAAEC;MAAK,CAAC,EAAE,CAACP,OAAO,EAAEC,MAAM,KAAK;QACpE,IAAIA,MAAM,KAAKN,MAAM,CAACC,MAAM,CAACC,IAAI,CAACtC,MAAM,CAACoD,mBAAmB,CAACR,EAAE,EAAE;UAC/D1B,OAAO,CAACuB,OAAO,CAAC;QAClB,CAAC,MAAM;UACLtB,MAAM,CAAC,IAAI0B,KAAK,CAAE,gCAA+BH,MAAO,EAAC,CAAC,CAAC;QAC7D;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,eAAeW,UAAUA,CAAA,EAAG;IAC1B,IAAI,CAACzD,GAAG,IAAI,CAACQ,WAAW,EAAE;MACxB;IACF;IAEA,IAAI;MACF,MAAMqB,MAAM,GAAG,MAAMQ,iBAAiB,CAAC7B,WAAW,CAAC;MACnD,MAAMJ,MAAM,GAAG,MAAM8C,kBAAkB,CACrCrB,MAAM,CAAC6B,QAAQ,CAACpB,QAAQ,EACxB,IAAI,EACJ,CAAC,YAAY,CACf,CAAC;MAED,IAAI5B,WAAW,EAAE;QACfJ,OAAO,CAACqD,OAAO,CAAEC,MAAM,IAAK;UAC1BA,MAAM,CAAC3D,MAAM,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC;QACFM,UAAU,CAAC,EAAE,CAAC;MAChB,CAAC,MAAM;QACL,MAAMsD,UAAU,GAAGzD,MAAM,CAACJ,GAAG,CAAE8D,KAAK,IAAK;UACvC,MAAMF,MAAM,GAAG,IAAIpB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACrD,MAAM,CAAC;YAC3C0E,QAAQ,EAAED,KAAK,CAACJ,QAAQ,CAACpB,QAAQ;YACjCtC,GAAG,EAAEA,GAAG;YACRgE,KAAK,EAAEF,KAAK,CAACG;UACf,CAAC,CAAC;UACF,OAAOL,MAAM;QACf,CAAC,CAAC;QACFrD,UAAU,CAACsD,UAAU,CAAC;MACxB;MAEAxD,SAAS,CAACD,MAAM,CAAC;MACjBO,cAAc,CAAC,CAACD,WAAW,CAAC;MAC5BG,qBAAqB,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOqD,KAAK,EAAE;MACd/B,OAAO,CAACC,GAAG,CAAC8B,KAAK,CAAC;IACpB;EACF;EAEA,MAAM;IAACC,QAAQ;IAAEC;EAAU,CAAC,GAAGhF,cAAc,CAAC;IAC5CiF,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC;EAChC,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBvE,SAAS,CAAC,CAACD,MAAM,CAAC;IACpB,CAAC;IAED,oBACEL,OAAA;MAAA8E,QAAA,gBACE9E,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAAC,QAAQ;MAAE;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACNnF,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAAC,eAAe,CAAE;QAAAgF,QAAA,eACtC9E,OAAA,CAACV,SAAS;UACR8F,EAAE,EAAE,KAAM;UACVC,IAAI,EAAE,EAAG;UACTC,qBAAqB,EAAErE,SAAU;UACjCC,OAAO,EAAEA,OAAQ;UACjBG,MAAM,EAAEA,MAAO;UAAAyD,QAAA,gBAEf9E,OAAA,CAACR,MAAM;YAAC0E,QAAQ,EAAEvD;UAAY;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,EACvChF,GAAG,iBACFH,OAAA;YACE+E,SAAS,EAAEjF,MAAM,CAAC,YAAY,CAAE;YAChCyF,OAAO,EAAE3B,UAAW;YAAAkB,QAAA,EACrB;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,EACApE,kBAAkB,iBAAIf,OAAA,CAACH,cAAc;YAACU,MAAM,EAAEA,MAAO;YAACF,MAAM,EAAEwE;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EACD,IAAIZ,SAAS,EAAE;IACb,oBAAOvE,OAAA;MAAA8E,QAAA,EAAK;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EACA,OAAOb,QAAQ,GAAGM,SAAS,CAAC,CAAC,GAAG,IAAI;AACtC;AAAC1E,EAAA,CAtJuBD,GAAG;EAAA,QA8GMV,cAAc;AAAA;AAAAiG,EAAA,GA9GvBvF,GAAG;AAAA,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}