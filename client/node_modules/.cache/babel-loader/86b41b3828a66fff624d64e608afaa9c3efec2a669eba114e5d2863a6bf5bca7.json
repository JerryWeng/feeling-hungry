{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport styles from \"./map.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [places, setPlaces] = useState();\n  const [markers, setMarkers] = useState([]);\n  const [coordinates, setCoordinates] = useState();\n  const [showMarkers, setShowMarkers] = useState(false);\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(async function onLoad(mapInstance) {\n    setMap(mapInstance);\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(successResponse => {\n          resolve(successResponse);\n        }, errorResponse => {\n          reject(errorResponse);\n        });\n      });\n    };\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\n      lat: result[\"coords\"][\"latitude\"],\n      lng: result[\"coords\"][\"longitude\"]\n    };\n    setCoordinates(coordinate);\n    mapInstance.setCenter(coordinate);\n    mapInstance.setZoom(13);\n    console.log(coordinate);\n  });\n  async function getGeocoderResult(location) {\n    return new Promise((resolve, reject) => {\n      const geocoder = new window.google.maps.Geocoder();\n      geocoder.geocode({\n        location\n      }, (results, status) => {\n        if (status === window.google.maps.GeocoderStatus.OK) {\n          resolve(results[0]);\n        } else {\n          reject(new Error(`Geocoder failed due to: ${status}`));\n        }\n      });\n    });\n  }\n  async function searchNearbyPlaces(location, radius, type) {\n    return new Promise((resolve, reject) => {\n      const service = new window.google.maps.places.PlacesService(map);\n      service.nearbySearch({\n        location,\n        radius,\n        type\n      }, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(results);\n        } else {\n          reject(new Error(`Places search failed due to: ${status}`));\n        }\n      });\n    });\n  }\n  async function findPlaces() {\n    if (!map || !coordinates) {\n      return;\n    }\n    try {\n      const result = await getGeocoderResult(coordinates);\n      const places = await searchNearbyPlaces(result.geometry.location, 2000, [\"restaurant\"]);\n      if (showMarkers) {\n        markers.forEach(marker => {\n          marker.setMap(null);\n        });\n        setMarkers([]);\n      } else {\n        const newMarkers = places.map(place => {\n          const marker = new window.google.maps.Marker({\n            position: place.geometry.location,\n            map: map,\n            title: place.name\n          });\n          return marker;\n        });\n        setMarkers(newMarkers);\n      }\n      setPlaces(places);\n      setShowMarkers(!showMarkers);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const RenderMap = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"search\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"map-container\"],\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: 'map',\n          zoom: 10,\n          mapContainerClassName: mapStyles,\n          options: options,\n          onLoad: onLoad,\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: coordinates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), map && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles['findButton'],\n            onClick: findPlaces,\n            children: \"Find Restaurants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? RenderMap() : null;\n}\n_s(Map, \"Kw4LX1TamKiz8S33olYpu+Bmmn0=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","useJsApiLoader","Marker","React","useState","useMemo","useCallback","styles","jsxDEV","_jsxDEV","Map","_s","map","setMap","places","setPlaces","markers","setMarkers","coordinates","setCoordinates","showMarkers","setShowMarkers","mapStyles","options","disableDefaultUI","clickableIcons","onLoad","mapInstance","getCurrentPositionPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","successResponse","errorResponse","result","coordinate","lat","lng","setCenter","setZoom","console","log","getGeocoderResult","location","geocoder","window","google","maps","Geocoder","geocode","results","status","GeocoderStatus","OK","Error","searchNearbyPlaces","radius","type","service","PlacesService","nearbySearch","PlacesServiceStatus","findPlaces","geometry","forEach","marker","newMarkers","place","position","title","name","error","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","RenderMap","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","zoom","mapContainerClassName","onClick","_c","$RefreshReg$"],"sources":["/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback } from \"react\";\n\nimport styles from \"./map.module.css\";\n\nexport default function Map() {\n  const [map, setMap] = useState(null);\n  const [places, setPlaces] = useState();\n  const [markers, setMarkers] = useState([]);\n  const [coordinates, setCoordinates] = useState();\n  const [showMarkers, setShowMarkers] = useState(false);\n\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(\n    () => ({\n      disableDefaultUI: true,\n      clickableIcons: false,\n    }),\n    []\n  );\n\n  const onLoad = useCallback(async function onLoad(mapInstance) {\n    setMap(mapInstance);\n\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(\n          (successResponse) => {\n            resolve(successResponse);\n          },\n          (errorResponse) => {\n            reject(errorResponse);\n          }\n        );\n      });\n    };\n\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\n      lat: result[\"coords\"][\"latitude\"],\n      lng: result[\"coords\"][\"longitude\"],\n    };\n    setCoordinates(coordinate);\n    mapInstance.setCenter(coordinate);\n    mapInstance.setZoom(13);\n\n    console.log(coordinate);\n  });\n\n  async function getGeocoderResult(location) {\n    return new Promise((resolve, reject) => {\n      const geocoder = new window.google.maps.Geocoder();\n      geocoder.geocode({ location }, (results, status) => {\n        if (status === window.google.maps.GeocoderStatus.OK) {\n          resolve(results[0]);\n        } else {\n          reject(new Error(`Geocoder failed due to: ${status}`));\n        }\n      });\n    });\n  }\n\n  async function searchNearbyPlaces(location, radius, type) {\n    return new Promise((resolve, reject) => {\n      const service = new window.google.maps.places.PlacesService(map);\n      service.nearbySearch({ location, radius, type }, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(results);\n        } else {\n          reject(new Error(`Places search failed due to: ${status}`));\n        }\n      });\n    });\n  }\n\n  async function findPlaces() {\n    if (!map || !coordinates) {\n      return;\n    }\n\n    try {\n      const result = await getGeocoderResult(coordinates);\n      const places = await searchNearbyPlaces(\n        result.geometry.location,\n        2000,\n        [\"restaurant\"]\n      );\n\n      if (showMarkers) {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        setMarkers([]);\n      } else {\n        const newMarkers = places.map((place) => {\n          const marker = new window.google.maps.Marker({\n            position: place.geometry.location,\n            map: map,\n            title: place.name,\n          });\n          return marker;\n        });\n        setMarkers(newMarkers);\n      }\n\n      setPlaces(places);\n      setShowMarkers(!showMarkers);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const {isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  })\n\n  const RenderMap = () => {\n    return (\n      <div>\n        <div className={styles[\"search\"]}>\n        </div>\n        <div className={styles[\"map-container\"]}>\n          <GoogleMap\n            id={'map'}\n            zoom={10}\n            mapContainerClassName={mapStyles}\n            options={options}\n            onLoad={onLoad}\n          >\n            <Marker position={coordinates}></Marker>\n            {map && (\n              <button \n                className={styles['findButton']}\n                onClick={findPlaces} \n              >\n                Find Restaurants\n              </button>\n            )}\n          </GoogleMap>\n        </div>\n      </div>\n    );\n  }\n  if (loadError) {\n    return <div>Map cannot be loaded.</div>\n  }\n  return isLoaded ? RenderMap() : null\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}