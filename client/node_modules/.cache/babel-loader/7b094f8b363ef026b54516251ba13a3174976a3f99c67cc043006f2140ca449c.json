{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\n\n// import { getRestaurantsData } from '../../api/getRestaurants.js'\nimport styles from \"./map.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const [places, setPlaces] = useState();\n  const [coordinates, setCoordinates] = useState();\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(async function onLoad(mapInstance) {\n    const geocoder = new window.google.maps.Geocoder();\n    const service = new window.google.maps.places.PlacesService(mapInstance);\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(successResponse => {\n          resolve(successResponse);\n        }, errorResponse => {\n          reject(errorResponse);\n        });\n      });\n    };\n    let currentLocation;\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\n      \"lat\": result['coords']['latitude'],\n      \"lng\": result['coords']['longitude']\n    };\n    mapInstance.setCenter(coordinate);\n    mapInstance.setZoom(13);\n    new window.google.maps.Marker({\n      position: {\n        lat: -25.363,\n        lng: 131.044\n      },\n      mapInstance\n    });\n    console.log(coordinate);\n    geocoder.geocode({\n      'location': coordinate\n    }, function (results, status) {\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        if (results[1]) {\n          currentLocation = results[1].place_id;\n          service.getDetails({\n            placeId: currentLocation\n          }, function (place, status) {\n            console.log('Place details:', place);\n          });\n        } else {\n          console.log('No results found');\n        }\n      } else {\n        console.log('Geocoder failed due to: ' + status);\n      }\n    });\n  });\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const RenderMap = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"search\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"map-container\"],\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: 'map',\n          zoom: 10,\n          mapContainerClassName: mapStyles,\n          options: options,\n          onLoad: onLoad,\n          children: /*#__PURE__*/_jsxDEV(MarkerF, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? RenderMap() : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 35\n  }, this);\n}\n_s(Map, \"Vqi3rLUNNuHrRLvooS7lufKRKww=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","useJsApiLoader","MarkerF","React","useState","useMemo","useCallback","useRef","useEffect","styles","jsxDEV","_jsxDEV","Map","_s","places","setPlaces","coordinates","setCoordinates","mapStyles","options","disableDefaultUI","clickableIcons","onLoad","mapInstance","geocoder","window","google","maps","Geocoder","service","PlacesService","getCurrentPositionPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","successResponse","errorResponse","currentLocation","result","coordinate","setCenter","setZoom","Marker","position","lat","lng","console","log","geocode","results","status","GeocoderStatus","OK","place_id","getDetails","placeId","place","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","RenderMap","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","zoom","mapContainerClassName","_c","$RefreshReg$"],"sources":["/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\n\n// import { getRestaurantsData } from '../../api/getRestaurants.js'\nimport styles from \"./map.module.css\";\n\nexport default function Map() {\n  const [places, setPlaces] = useState();\n  const [coordinates, setCoordinates] = useState();\n\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false,\n  }), []);\n\n\n  const onLoad = useCallback(async function onLoad (mapInstance){\n    const geocoder = new window.google.maps.Geocoder\n    const service = new window.google.maps.places.PlacesService(mapInstance)\n\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition((successResponse) => {\n              resolve(successResponse);\n          }, (errorResponse) => {\n              reject(errorResponse);\n          });\n      });\n    }   \n\n    let currentLocation;\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\"lat\" : result['coords']['latitude'], \"lng\" : result['coords']['longitude']}\n    mapInstance.setCenter(coordinate)\n    mapInstance.setZoom(13)\n\n    new window.google.maps.Marker({\n      position: { lat: -25.363, lng: 131.044 },\n      mapInstance\n    })\n\n    console.log(coordinate)\n    \n    geocoder.geocode({'location': coordinate}, function(results, status){\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        if (results[1]) {\n          currentLocation = results[1].place_id\n          service.getDetails({\n            placeId: currentLocation\n          }, function (place, status) {\n            console.log('Place details:', place);\n          });\n        } else {\n          console.log('No results found')\n        }\n      } else {\n        console.log('Geocoder failed due to: ' + status)\n      }\n    })\n  });\n\n  const {isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  })\n  \n  const RenderMap = () => {\n    return (\n      <div>\n        <div className={styles[\"search\"]}>\n        </div>\n        <div className={styles[\"map-container\"]}>\n          <GoogleMap\n            id={'map'}\n            zoom={10}\n            mapContainerClassName={mapStyles}\n            options={options}\n            onLoad={onLoad}\n          >\n            <MarkerF></MarkerF>\n          </GoogleMap>\n        </div>\n      </div>\n    );\n  }\n  if (loadError) {\n    return <div>Map cannot be loaded.</div>\n  }\n  return isLoaded ? RenderMap() : <div></div>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}