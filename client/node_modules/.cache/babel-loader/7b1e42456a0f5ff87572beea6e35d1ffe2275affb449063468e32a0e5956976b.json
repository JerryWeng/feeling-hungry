{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\nimport styles from \"./map.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [places, setPlaces] = useState();\n  const [markers, setMarkers] = useState([]);\n  const [coordinates, setCoordinates] = useState();\n  const mapStyles = styles[\"map-container\"];\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(async function onLoad(mapInstance) {\n    setMap(mapInstance);\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(successResponse => {\n          resolve(successResponse);\n        }, errorResponse => {\n          reject(errorResponse);\n        });\n      });\n    };\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\n      \"lat\": result['coords']['latitude'],\n      \"lng\": result['coords']['longitude']\n    };\n    setCoordinates(coordinate);\n    mapInstance.setCenter(coordinate);\n    mapInstance.setZoom(13);\n    console.log(coordinate);\n  });\n  async function getGeocoderResult(location) {\n    return new Promise((resolve, reject) => {\n      const geocoder = new window.google.maps.Geocoder();\n      geocoder.geocode({\n        location\n      }, (results, status) => {\n        if (status === window.google.maps.GeocoderStatus.OK) {\n          resolve(results[0]);\n        } else {\n          reject(new Error(`Geocoder failed due to: ${status}`));\n        }\n      });\n    });\n  }\n  async function searchNearbyPlaces(location, radius, type) {\n    return new Promise((resolve, reject) => {\n      const service = new window.google.maps.places.PlacesService(map);\n      service.nearbySearch({\n        location,\n        radius,\n        type\n      }, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(results);\n        } else {\n          reject(new Error(`Places search failed due to: ${status}`));\n        }\n      });\n    });\n  }\n  async function findPlaces() {\n    if (!map || !coordinates) {\n      return;\n    }\n    try {\n      const result = await getGeocoderResult(coordinates);\n      const places = await searchNearbyPlaces(result.geometry.location, 2000, ['restaurant']);\n      markers.forEach(marker => {\n        marker.setMap(null);\n      });\n      const newMarkers = places.map(place => {\n        const marker = new window.google.maps.Marker({\n          position: place.geometry.location,\n          map: map,\n          title: place.name\n        });\n        return marker;\n      });\n      setPlaces(places);\n      setMarkers(newMarkers);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  });\n  const RenderMap = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"search\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"map-container\"],\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: 'map',\n          zoom: 10,\n          mapContainerClassName: mapStyles,\n          options: options,\n          onLoad: onLoad,\n          children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n            position: coordinates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), map && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles['findButton'],\n            onClick: findPlaces,\n            children: \"Find Restaurants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? RenderMap() : null;\n}\n_s(Map, \"jRmMthsE8RwWU4dft3OnYnN9Ujw=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","useJsApiLoader","MarkerF","React","useState","useMemo","useCallback","useRef","useEffect","styles","jsxDEV","_jsxDEV","Map","_s","map","setMap","places","setPlaces","markers","setMarkers","coordinates","setCoordinates","mapStyles","options","disableDefaultUI","clickableIcons","onLoad","mapInstance","getCurrentPositionPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","successResponse","errorResponse","result","coordinate","setCenter","setZoom","console","log","getGeocoderResult","location","geocoder","window","google","maps","Geocoder","geocode","results","status","GeocoderStatus","OK","Error","searchNearbyPlaces","radius","type","service","PlacesService","nearbySearch","PlacesServiceStatus","findPlaces","geometry","forEach","marker","newMarkers","place","Marker","position","title","name","error","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","RenderMap","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","zoom","mapContainerClassName","onClick","_c","$RefreshReg$"],"sources":["/Users/jerry/Developer/feeling-hungry/client/src/components/map/Map.jsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from \"react\";\n\nimport styles from \"./map.module.css\";\n\nexport default function Map() {\n  const [map, setMap] = useState(null);\n  const [places, setPlaces] = useState();\n  const [markers, setMarkers] = useState([])\n  const [coordinates, setCoordinates] = useState();\n\n  const mapStyles = styles[\"map-container\"]\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false,\n  }), []);\n\n  const onLoad = useCallback(async function onLoad (mapInstance){\n    setMap(mapInstance)\n\n    const getCurrentPositionPromise = () => {\n      return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition((successResponse) => {\n              resolve(successResponse);\n          }, (errorResponse) => {\n              reject(errorResponse);\n          });\n      });\n    }   \n\n    const result = await getCurrentPositionPromise();\n    const coordinate = {\"lat\" : result['coords']['latitude'], \"lng\" : result['coords']['longitude']}\n    setCoordinates(coordinate)\n    mapInstance.setCenter(coordinate)\n    mapInstance.setZoom(13)\n\n    console.log(coordinate)\n  });\n\n  async function getGeocoderResult(location) {\n    return new Promise((resolve, reject) => {\n      const geocoder = new window.google.maps.Geocoder();\n      geocoder.geocode({ location }, (results, status) => {\n        if (status === window.google.maps.GeocoderStatus.OK) {\n          resolve(results[0]);\n        } else {\n          reject(new Error(`Geocoder failed due to: ${status}`));\n        }\n      });\n    });\n  }\n\n  async function searchNearbyPlaces(location, radius, type) {\n    return new Promise((resolve, reject) => {\n      const service = new window.google.maps.places.PlacesService(map);\n      service.nearbySearch({ location, radius, type }, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(results);\n        } else {\n          reject(new Error(`Places search failed due to: ${status}`));\n        }\n      });\n    });\n  }\n\n  async function findPlaces() {\n    if (!map || !coordinates) {\n      return;\n    }\n  \n    try {\n      const result = await getGeocoderResult(coordinates);\n      const places = await searchNearbyPlaces(result.geometry.location, 2000, ['restaurant']);\n  \n      markers.forEach((marker) => {\n        marker.setMap(null);\n      });\n  \n      const newMarkers = places.map((place) => {\n        const marker = new window.google.maps.Marker({\n          position: place.geometry.location,\n          map: map,\n          title: place.name,\n        });\n        return marker;\n      });\n  \n      setPlaces(places);\n      setMarkers(newMarkers);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const {isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  })\n\n  const RenderMap = () => {\n    return (\n      <div>\n        <div className={styles[\"search\"]}>\n        </div>\n        <div className={styles[\"map-container\"]}>\n          <GoogleMap\n            id={'map'}\n            zoom={10}\n            mapContainerClassName={mapStyles}\n            options={options}\n            onLoad={onLoad}\n          >\n            <MarkerF position={coordinates}></MarkerF>\n            {map && (\n              <button \n                className={styles['findButton']}\n                onClick={findPlaces} \n              >\n                Find Restaurants\n              </button>\n            )}\n          </GoogleMap>\n        </div>\n      </div>\n    );\n  }\n  if (loadError) {\n    return <div>Map cannot be loaded.</div>\n  }\n  return isLoaded ? RenderMap() : null\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}